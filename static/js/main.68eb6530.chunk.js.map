{"version":3,"sources":["helper/numbers/modules/ScaleValue.ts","helper/index.ts","api/Ray.ts","api/Particle.ts","api/Wall.ts","api/IonPainter.ts","components/Canvas/Canvas.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["scaleValue","value","fromRange","toRange","start","end","Error","scale","cap","Math","min","max","floor","numbers","Ray","P5","position","angle","quality","_p5","_position","_direction","_sightQuality","this","p5","Vector","fromAngle","boundry","x1","a","x","y1","y","x2","b","y2","x3","y3","x4","y4","den","t","intersect","createVector","stroke","push","translate","line","pop","vector","Particle","_rays","_heading","_rayRotation","_baseQuality","_maxAngle","_cutOffAngle","newQuality","ratio","helper","abs","radians","set","index","direction","amount","setMag","add","boundrys","scene","ray","closest","record","Infinity","intersection","intersects","distance","dist","heading","cos","fill","ellipse","show","Wall","IonPainter","node","_walls","_particle","_sceneW","windowWidth","_sceneH","windowHeight","draw","keyIsDown","move","rotate","background","mouseX","mouseY","look","w","length","noStroke","ssq","wsq","map","h","rectMode","CENTER","rect","random","_addCutOffWalls","createCanvas","_createWalls","Canvas","canvasContainer","document","getElementById","id","React","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.68eb6530.chunk.js","sourcesContent":["interface IRange {\r\n  start: number;\r\n  end: number;\r\n}\r\n\r\nexport function scaleValue (value: number, fromRange: IRange, toRange: IRange): number {\r\n  if ((value < fromRange.start) || (value > fromRange.end)) {\r\n    throw new Error(`${value} must be inside ${fromRange.start} - ${fromRange.end}`);\r\n  }\r\n  const scale = (toRange.end - toRange.start) / (fromRange.end - fromRange.start);\r\n  const cap = Math.min(fromRange.end, Math.max(fromRange.start, value)) - fromRange.start;\r\n  return Math.floor(cap * scale + toRange.start);\r\n}\r\n","import * as numbers from './numbers/index';\r\n\r\nexport default {\r\n  numbers\r\n};\r\n","import p5 from 'p5';\r\nimport { IonPainter } from './IonPainter';\r\nimport { Wall } from './Wall';\r\n\r\nexport class Ray {\r\n  private _p5: IonPainter;\r\n  private _position: p5.Vector;\r\n  private _direction: p5.Vector;\r\n  private _sightQuality: number;\r\n\r\n  constructor (P5: IonPainter, position: p5.Vector, angle: number, quality: number) {\r\n    this._p5 = P5;\r\n    this._position = position;\r\n    this._direction = p5.Vector.fromAngle(angle);\r\n    this._sightQuality = quality;\r\n  }\r\n\r\n  public get quality (): number {\r\n    return this._sightQuality;\r\n  }\r\n\r\n  public get direction (): p5.Vector {\r\n    return this._direction;\r\n  }\r\n\r\n  public set direction (vector: p5.Vector) {\r\n    this._direction = vector;\r\n  }\r\n\r\n  public intersects (boundry: Wall): p5.Vector {\r\n    const x1 = boundry.a.x;\r\n    const y1 = boundry.a.y;\r\n    const x2 = boundry.b.x;\r\n    const y2 = boundry.b.y;\r\n\r\n    const x3 = this._position.x;\r\n    const y3 = this._position.y;\r\n    const x4 = this._position.x + this._direction.x;\r\n    const y4 = this._position.y + this._direction.y;\r\n\r\n    const den = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n    if (!den) {\r\n      return;\r\n    }\r\n\r\n    const t = ((x1 - x3) * (y3 - y4) - (y1 - y3) * (x3 - x4)) / den;\r\n    const u = - ((x1 - x2) * (y1 - y3) - (y1 - y2) * (x1 - x3)) / den;\r\n\r\n    if (t > 0 && t < 1 && u > 0) {\r\n      const intersect = this._p5.createVector();\r\n      intersect.x = x1 + t * (x2 - x1);\r\n      intersect.y = y1 + t * (y2 - y1);\r\n      return intersect;\r\n    }\r\n    return;\r\n  }\r\n\r\n  public show (): void {\r\n    this._p5.stroke(255);\r\n    this._p5.push();\r\n    this._p5.translate(this._position.x, this._position.y);\r\n    this._p5.line(0, 0, this._direction.x * 10, this._direction.y * 10);\r\n    this._p5.pop();\r\n  }\r\n}\r\n","import p5 from 'p5';\r\nimport helper from '../helper';\r\nimport { IonPainter } from './IonPainter';\r\nimport { Ray } from './Ray';\r\nimport { Wall } from './Wall';\r\n\r\ninterface Position {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport class Particle {\r\n  private _p5: IonPainter;\r\n  private _position: p5.Vector;\r\n  private _rays: Ray[];\r\n  private _heading: number;\r\n  private _rayRotation: number = 0;\r\n  private _baseQuality: number = 255;\r\n  private _maxAngle: number = 60;\r\n  private _cutOffAngle: number = 0;\r\n\r\n  constructor (P5: IonPainter, position: Position) {\r\n    this._p5 = P5;\r\n    this._position = this._p5.createVector(position.x, position.y);\r\n    this._rays = [];\r\n    this._heading = 0;\r\n\r\n    for (this._rayRotation = -this._maxAngle; this._rayRotation <= this._maxAngle; this._rayRotation += .2) {\r\n      let newQuality = 0;\r\n      if (this._rayRotation <= -this._cutOffAngle || this._rayRotation >= this._cutOffAngle) {\r\n        const scaled = helper.numbers.scaleValue(Math.abs(this._rayRotation) - this._cutOffAngle, {\r\n          start: 0,\r\n          end: this._maxAngle - this._cutOffAngle\r\n        }, {\r\n          start: 0,\r\n          end: 100\r\n        });\r\n        const ratio = 1 - scaled / 100;\r\n        newQuality = this._baseQuality * ratio;\r\n      } else {\r\n        newQuality = this._baseQuality;\r\n      }\r\n      this._rays.push(new Ray(this._p5, this._position, this._p5.radians(this._rayRotation), newQuality));\r\n    }\r\n  }\r\n\r\n  public position (x: number, y: number): void {\r\n    this._position.set(x, y);\r\n  }\r\n\r\n  public rotate (angle: number): void {\r\n    this._heading += angle;\r\n    let index = 0;\r\n    for (this._rayRotation = -this._maxAngle; this._rayRotation <= this._maxAngle; this._rayRotation += .2) {\r\n      this._rays[index].direction = p5.Vector.fromAngle(this._p5.radians(this._rayRotation) + this._heading);\r\n      index++;\r\n    }\r\n  }\r\n\r\n  public move (amount: number): void {\r\n    const value = p5.Vector.fromAngle(this._heading);\r\n    value.setMag(amount);\r\n    this._position.add(value);\r\n  }\r\n\r\n  public look (boundrys: Wall[]): number[] {\r\n    const scene = [];\r\n    for (const ray of this._rays) {\r\n      let closest = null;\r\n      let record = Infinity;\r\n      for (const boundry of boundrys) {\r\n        const intersection = ray.intersects(boundry);\r\n        if (intersection) {\r\n          let distance = p5.Vector.dist(this._position, intersection);\r\n          const a = ray.direction.heading() - this._heading;\r\n          distance *= this._p5.cos(a);\r\n\r\n          if (distance < record) {\r\n            record = distance;\r\n            closest = intersection;\r\n          }\r\n          record = Math.min(distance, record);\r\n        }\r\n      }\r\n      if (closest) {\r\n        this._p5.stroke(0, 255, 0, ray.quality);\r\n        this._p5.line(this._position.x, this._position.y, closest.x, closest.y);\r\n      }\r\n      scene.push(record);\r\n    }\r\n    return scene;\r\n  }\r\n\r\n  public show (): void {\r\n    this._p5.fill(255);\r\n    this._p5.ellipse(this._position.x, this._position.y, 4);\r\n    for (const ray of this._rays) {\r\n      ray.show();\r\n    }\r\n  }\r\n}\r\n","import p5 from 'p5';\r\nimport { IonPainter } from './IonPainter';\r\n\r\nexport class Wall {\r\n  private _p5: IonPainter;\r\n  public a: p5.Vector;\r\n  public b: p5.Vector;\r\n\r\n  constructor (P5: IonPainter, x1: number, y1: number, x2: number, y2: number) {\r\n    this._p5 = P5;\r\n    this.a = this._p5.createVector(x1, y1);\r\n    this.b = this._p5.createVector(x2, y2);\r\n  }\r\n\r\n  show (): void {\r\n    this._p5.stroke(255);\r\n    this._p5.line(this.a.x, this.a.y, this.b.x, this.b.y);\r\n  }\r\n}\r\n","import p5 from 'p5';\r\nimport { Particle } from './Particle';\r\nimport { Wall } from './Wall';\r\n\r\nexport class IonPainter extends p5 {\r\n\r\n  private _walls: Wall[];\r\n  private _particle: Particle;\r\n  private _sceneW = this.windowWidth / 2 - 50;\r\n  private _sceneH = this.windowHeight / 2 - 50;\r\n\r\n  constructor (node: HTMLElement) {\r\n    super(() => { /* empty */ }, node);\r\n    this._walls = [];\r\n  }\r\n\r\n  private _addCutOffWalls (): void {\r\n    this._walls.push(new Wall(this, 0, 0, this._sceneW, 0));\r\n    this._walls.push(new Wall(this, this._sceneW, 0, this._sceneW, this._sceneH));\r\n    this._walls.push(new Wall(this, this._sceneW, this._sceneH, 0, this._sceneH));\r\n    this._walls.push(new Wall(this, 0, this._sceneH, 0, 0));\r\n  }\r\n\r\n  private _isKeyDownAnyDefined (): boolean {\r\n    return this.keyIsDown(87) || this.keyIsDown(83) || this.keyIsDown(65) || this.keyIsDown(68);\r\n  }\r\n\r\n  private _createWalls (): void {\r\n    for (let index = 0; index < 5; index++) {\r\n      const x1 = this.random(this._sceneW);\r\n      const x2 = this.random(this._sceneW);\r\n      const y1 = this.random(this._sceneH);\r\n      const y2 = this.random(this._sceneH);\r\n      this._walls.push(new Wall(this, x1, x2, y1, y2));\r\n    }\r\n    this._addCutOffWalls();\r\n  }\r\n\r\n  public setup (): void {\r\n    this.createCanvas(this._sceneW * 2, this._sceneH);\r\n\r\n    this._createWalls();\r\n\r\n    this._particle = new Particle(this, {\r\n      x: this._sceneW / 2,\r\n      y: this._sceneH / 2\r\n    });\r\n  }\r\n\r\n  public draw = () => {\r\n\r\n    // w\r\n    if (this.keyIsDown(87)) {\r\n      this._particle.move(1);\r\n    }\r\n\r\n    // s\r\n    if (this.keyIsDown(83)) {\r\n      this._particle.move(-1);\r\n    }\r\n\r\n    // a\r\n    if (this.keyIsDown(65)) {\r\n      this._particle.rotate(-0.05);\r\n    }\r\n\r\n    // d\r\n    if (this.keyIsDown(68)) {\r\n      this._particle.rotate(0.05);\r\n    }\r\n\r\n    this.background(0);\r\n    for (const wall of this._walls) {\r\n      wall.show();\r\n    }\r\n\r\n    // FIXME: moves particel position to mouse postion after key release\r\n    // if (!this._isKeyDownAnyDefined()) {\r\n    this._particle.position(this.mouseX, this.mouseY);\r\n    // }\r\n\r\n    this._particle.show();\r\n\r\n    const scene = this._particle.look(this._walls);\r\n    const w = this._sceneW / scene.length;\r\n\r\n    this.push();\r\n    this.translate(this._sceneW, 0);\r\n\r\n    for (let index = 0; index < scene.length; index++) {\r\n      this.noStroke();\r\n\r\n      const ssq = scene[index] * scene[index];\r\n      const wsq = this._sceneW * this._sceneW;\r\n\r\n      const b = this.map(ssq, 0, wsq, 255, 0);\r\n      const h = this.map(scene[index], 0, this._sceneW, this._sceneH, 0);\r\n      this.fill(0, b, 0);\r\n      this.rectMode(this.CENTER);\r\n      this.rect((index * w) + (w / 2), this._sceneH / 2, w + 1, h);\r\n    }\r\n\r\n    this.pop();\r\n  }\r\n\r\n  // placeholder method\r\n  public show (): void {\r\n    return;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { IonPainter } from '../../api/IonPainter';\r\nimport './Canvas.css';\r\n\r\nexport class Canvas extends React.Component {\r\n  componentDidMount (): void {\r\n    const canvasContainer = document.getElementById('canvas-container');\r\n    const ionPainter = new IonPainter(canvasContainer);\r\n    ionPainter.show();\r\n  }\r\n\r\n  render (): React.ReactNode {\r\n    return (\r\n      <div id='canvas-container'></div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Canvas } from '../Canvas/Canvas';\r\nimport './App.css';\r\n\r\nexport class App extends React.Component {\r\n  render (): React.ReactNode {\r\n    return (\r\n      <div className='App'>\r\n        <Canvas />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register (config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // tslint:disable-next-line:no-console\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // tslint:disable-next-line:no-console\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // tslint:disable-next-line:no-console\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      // tslint:disable-next-line:no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // tslint:disable-next-line:no-console\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister (): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        // tslint:disable-next-line:no-console\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components/App/App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}